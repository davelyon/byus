<% bin_url =  bin_links_path(bin.secret_hash) %>
$(document).ready( function() {
  var Link = Backbone.Model.extend({
    initialize: function() {},
    title: function() {return this.get("title")},
    location: function() {return this.attributes.location},
    url: function() { return "<%= bin_url %>/" + this.id},
    afterDestroy: function(model, response) {
      $(model.view.el).slideUp(1000, function(){ $(this).remove() });
    }
  });

  var BinLinks = Backbone.Collection.extend({
    model: Link,
    initialize: function() {
      this.lastRequestTime = new Date().toUTCString();
    },
    url: function() { 
      var url = "<%= bin_url %>";
      if ( this.timeRange ) {
        url = url + "?time=" + this.timeRange
      }
      return url;
    },
    latestUrl: function() {
      return "<%= bin_url %>" +
        "/?since=" + this.lastRequestTime;
    },
    comparator: function(link) {
      return -link.get('updated_at');
    },
    add: function(models, options) {
      var linksToAdd = _.reject(models, function(link) {
        return Links.get(link.id);
      });
      Backbone.Collection.prototype.add.call(this, linksToAdd, options);
    },
    getMore: function() {
      var links = this;
      $.ajax({
        url: this.latestUrl(),
        dataType: 'json',
        success: function(data, statusText, xhr) {
          if (data.length) {
            links.add(data);
            links.lastRequestTime = new Date().toUTCString();
          }
        },
        error: function(error) { console.log(error) }
      });
    },
    updateForTime: function(time) {
      this.timeRange = time;
      this.fetch({success: function() { console.log("New links!")}});
    }
  });

  var LinkView = Backbone.View.extend({
    tagName: "li",
    events: {},
    initialize: function() {
      _.bindAll(this, 'render');
      this.model.bind('change', this.render);
      this.model.view = this;
      this.template = $("#link-template").html();
    },

    render: function() {
      var linkHtml = $(this.el).html(Mustache.to_html(this.template, this.model.toJSON()));
      var model = this.model;
      linkHtml.find('.destroy').click(function() {
        model.destroy({
          success: model.afterDestroy,
          error: function() { console.log("Oops") }
        });
      });

      return this;
    }
  });

  var BinLinksView = Backbone.View.extend({
    el: $('#bin_links'),

    events: {},

    initialize: function() {
      _.bindAll(this, 'addLink', 'addAll');

      Links.bind('add', this.addLink);
      Links.bind('refresh', this.addAll);

      Links.refresh(<%=raw links.to_json %>);
    },

    addLinkPlain: function(link) {
      var view = new LinkView({model: link});
      var renderedView = view.render().el;
      $(renderedView).remove();
      $('.links').prepend(renderedView);
      return renderedView;
    },

    addLink: function(link) {
      $(this.addLinkPlain(link)).hide().fadeIn(1000);
    },

    addAll: function() {
      $(this.el).find('.links').empty();
      Links.each(this.addLinkPlain);
    }
  });

  var BinController = Backbone.Controller.extend({

    routes: {
      "links/:time": "updateForTime"
    },

    updateForTime: function(time) { Links.updateForTime(time) }
  });


  window.Links = new BinLinks;
  window.App = new BinLinksView;
  window.Controller = new BinController;
  Backbone.history.start();
  setInterval( 'Links.getMore()', 5000);
});
